server:
  port: 8185
  servlet:
    context-path: /elastic-query-web-client

elastic-query-web-client: # this prefix requires class with prefix "elastic-query-web-client"
  webclient: # THIS PREFIX REQUIRES INNER CLASS WITH THIS NAME (webclient) and we do not need to use @ConfigurationProperties(prefix = "webclient")
    connect-timeout-ms: 10000
    read-timeout-ms: 10000
    write-timeout-ms: 10000
    max-in-memory-size: 10485760 # 10 MB, max memory client can use
    content-type: 'application/vnd.api.v1+json' # default Content-Type and Accept type client will use
    accept-type: 'application/vnd.api.v1+json'
    # until the load balancer will be configured, we'll use localhost:8183
    #base-url: 'http://localhost:8183/elastic-query-service/documents' # was used before client side load balancer
    base-url: 'http://elastic-query-service/elastic-query-service/documents' # base URL we want to connect to with this client
    # add service name and instances for loadbalancer to use
    service-id: elastic-query-service
    instances:
      -
        id: elastic-query-service-1
        host: localhost
        port: 8183
      -
        id: elastic-query-service-2
        host: localhost
        port: 8186
  query-by-text:
    method: POST
    uri: "/get-document-by-text"
    accept: ${elastic-query-web-client.webclient.accept-type} # using ${...} to reuse previously defined variable in YML

spring:
  thymeleaf:
    cache: false # setting Thymeleaf cache to false allows Thymeleaf web page to be reloaded when there are changes during development
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: 'elastic-query-web-client-2'
            client-secret: '{cipher}de287d319cc336b44eeca639f2a2b2ad9733d5d185ce4aaa7366ffdefdffd85689582f7590a04da3722576abf8f612c80ca9e8813d434550ad1fb666c94c9371'
            authorization-grant-type: authorization_code
            redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
            scope: openid
        provider:
          keycloak:
            issuerUri: http://localhost:9091/realms/microservices-realm

security:
  logout-success-url: http://localhost:8185/elastic-query-web-client
  default-client-registration-id: keycloak

user-config: # needed for security configuration
  username: test
  # using encrypted password with JCE (See WebSecurityConfig.class)
  password: '{cipher}8a3bffc96be1241f6702cf5b3246b3b793d53f68b5d45016aa8e369ade5fca8d'
  # using BCrypted and then encrypted password with JCE
  #password: '{cipher}d1136ee06e6b4905eb6d7eae56d07e43cfd83b4ab2ad7ec7ec1dd2e196f6da8e45d644c33b9218ac74527bc1df1758219f72e51839ece714f04bbbf42c90dd7002a89cfd36ea9190ffd07375336a2247'
  roles: USER
