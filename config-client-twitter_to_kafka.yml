server:
  port: 8181

# I want to get twits from Twitter related to these keywords
twitter-to-kafka-service:
  twitter-keywords:
    - Java
    - Microservices
    - Spring
    - Kafka
    - Elasticsearch
  welcome-message: Hi, this is Twitter to Kafka service!
  # if false, real twitter streaming service will be used
  enable-mock-tweets: true
  mock-min-tweet-length: 5
  mock-max-tweet-length: 15
  mock-sleep-ms: 10000

retry-config:
  initial-interval-ms: 2000
  max-interval-ms: 10000
  multiplier: 2.0
  max-attempts: 3
  sleep-time-ms: 2000

kafka-config:
  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092 # hostname and port numbers from docker compose file
  schema-registry-url-key: schema.registry.url
  schema-registry-url: http://localhost:8081 # also defined in docker compose file kafka_cluster.yml
  topic-name: twitter-topic
  topic-names-to-create:
    - twitter-topic
    - twitter-analytics-topic
  num-of-partitions: 3
  replication-factor: 3

kafka-producer-config:
  key-serializer-class: org.apache.kafka.common.serialization.LongSerializer # we will use Long value as key, so we need matching serializer for keys
  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer # value will be of Avro format, so we need matching serializer for values
  compression-type: snappy # other options: Gzip, Lz4, Zstd (Snappy has medium compression ratio; library from Google)
  acks: all # all: we want to get ACKs from all replicas to be more resilient | 1: wait only current broker's ACK | 0: no ACK
  batch-size: 16834 # 16 kB, default value
  batch-size-boost-factor: 100 # 100 * batch-size, can be tuned for higher throughput, this will enable more batching and higher throughput
  linger-ms: 5 # add a delay on producer in case of light load; this delay will result in more batches; and it will wait 5 ms before sending records to Kafka
  request-timeout-ms: 60000 # after 60 s if no ACK comes, producer will throw Timeout error
  retry-count: 5 # retries 5 times inn case of error

